<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{5B9B3C0F-F6AB-43D4-BD5C-01CBC4EEF122}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>VintageStoryCodeMod1</RootNamespace>
    <AssemblyName>VintageStoryCodeMod1</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <StartAction>Program</StartAction>
    <StartProgram>$(VINTAGE_STORY)\Vintagestory.exe</StartProgram>
    <StartArguments>--tracelog --addModPath="$(SolutionDir).debug"</StartArguments>
    <StartWorkingDirectory>$(VINTAGE_STORY)</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <StartAction>Program</StartAction>
    <StartProgram>$(VINTAGE_STORY)\Vintagestory.exe</StartProgram>
    <StartArguments>--tracelog --addModPath="$(SolutionDir).release"</StartArguments>
    <StartWorkingDirectory>$(VINTAGE_STORY)</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'DebugB|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\DebugB\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <LangVersion>7.3</LangVersion>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'DebugServer|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\DebugServer\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <LangVersion>7.3</LangVersion>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="src\Config\PlayerAliasConfig.cs" />
    <Compile Include="src\ModSystems\PlayerAliasClientMod.cs" />
    <Compile Include="src\ModSystems\PlayerAliasModSystem.cs" />
    <Compile Include="src\ModSystems\PlayerAliasServerMod.cs" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="VintagestoryAPI">
      <HintPath>$(VINTAGE_STORY)\VintagestoryAPI.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="VintagestoryLib">
      <HintPath>$(VINTAGE_STORY)\VintagestoryLib.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="VSCreativeMod">
      <HintPath>$(VINTAGE_STORY)\Mods\VSCreativeMod.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="VSSurvivalMod">
      <HintPath>$(VINTAGE_STORY)\Mods\VSSurvivalMod.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="VSEssentials">
      <HintPath>$(VINTAGE_STORY)\Mods\VSEssentials.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="0Harmony">
      <HintPath>$(VINTAGE_STORY)\Lib\0Harmony.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="AnimatedGif">
      <HintPath>$(VINTAGE_STORY)\Lib\AnimatedGif.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="cairo-sharp">
      <HintPath>$(VINTAGE_STORY)\Lib\cairo-sharp.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(VINTAGE_STORY)\Lib\Newtonsoft.Json.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="OpenTK">
      <HintPath>$(VINTAGE_STORY)\Lib\OpenTK.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="protobuf-net">
      <HintPath>$(VINTAGE_STORY)\Lib\protobuf-net.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="System.Data.SQLite">
      <HintPath>$(VINTAGE_STORY)\Lib\System.Data.SQLite.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Tavis.JsonPatch">
      <HintPath>$(VINTAGE_STORY)\Lib\Tavis.JsonPatch.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="_Documentation\Finishing Steps.txt" />
    <Content Include="_Documentation\Modding Resources.txt" />
    <Content Include="_Includes\LICENSE.md" />
    <Content Include="_Includes\README.md" />
    <Content Include="_Includes\CREDITS.md" />
  </ItemGroup>
  <ItemGroup>
    <None Include="_Includes\assets\playeralias\lang\en.json" />
    <None Include="_Includes\modinfo.json" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Extensions\" />
    <Folder Include="GameContent\" />
    <Folder Include="Patches\" />
    <Folder Include="Services\" />
    <Folder Include="_Includes\assets\playeralias\blocktypes\" />
    <Folder Include="_Includes\assets\playeralias\config\" />
    <Folder Include="_Includes\assets\playeralias\dialog\" />
    <Folder Include="_Includes\assets\playeralias\entities\" />
    <Folder Include="_Includes\assets\playeralias\fonts\" />
    <Folder Include="_Includes\assets\playeralias\itemtypes\" />
    <Folder Include="_Includes\assets\playeralias\music\" />
    <Folder Include="_Includes\assets\playeralias\patches\" />
    <Folder Include="_Includes\assets\playeralias\recipes\grid\" />
    <Folder Include="_Includes\assets\playeralias\shaderincludes\" />
    <Folder Include="_Includes\assets\playeralias\shaders\" />
    <Folder Include="_Includes\assets\playeralias\shapes\" />
    <Folder Include="_Includes\assets\playeralias\sounds\effect\" />
    <Folder Include="_Includes\assets\playeralias\textures\" />
    <Folder Include="_Includes\assets\playeralias\worldgen\" />
    <Folder Include="_Includes\assets\playeralias\worldproperties\" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>
:: Copy all relevant files to output directory. ::
xcopy "$(TargetDir)" "$(SolutionDir).debug\$(ProjectName)" /y /e /s &gt; NUL
xcopy "$(ProjectDir)_Includes" "$(SolutionDir).debug\$(ProjectName)" /y /e /s &gt; NUL

:: Package mod as zip file. ::
powershell -ExecutionPolicy Unrestricted $(ProjectDir)$(ProjectName).ps1 -ModInfoPath $(ProjectDir)_Includes\modinfo.json -SourceFiles $(SolutionDir).debug\$(ProjectName)\* -ArchiveName $(SolutionDir).release\$(ProjectName)
echo Zip File can be found at:  $(SolutionDir).release\
		</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PreBuildEvent>
:: Clean output directories. ::
del /f /s /q $(SolutionDir).debug\$(ProjectName) &gt; NUL
rmdir /s /q $(SolutionDir).debug\$(ProjectName) &gt; NUL
del /f /s /q $(SolutionDir).release\ &gt; NUL
rmdir /s /q $(SolutionDir).release\ &gt; NUL

:: Rebuild necessary folders. ::
if not exist $(SolutionDir).debug\$(ProjectName)\ mkdir $(SolutionDir).debug\$(ProjectName)\
if not exist $(SolutionDir).release\ mkdir $(SolutionDir).release\
		</PreBuildEvent>
  </PropertyGroup>
</Project>